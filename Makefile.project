#
#  OpenDAFF Project Makefile
#
#  Autoren:	Frank Wefers  (Frank.Wefers@akustik.rwth-aachen.de)
#			Jonas Stienen (Jonas.Stienen@akustik.rwth-aachen.de)
#
#  Version:	$Id: Makefile.project,v 1.2 2010/02/08 18:55:48 fwefers Exp $
#

#
#  This Makefile contains the dependency generation and compile and link rules 
#

# Inherit common settings and platform specific stuff
include Makefile.common
include Makefile.$(BUILD_PLATFORM)


# -= Files =-----------------------------------------

#
#  Here all source files of the library are listed
#

vpath %.h $(INCLUDE_DIR)

include Makefile.sources

# Generate the list of all object files from the source files
LIB_OBJ = $(patsubst $(SRC_DIR)/%,$(OBJ_DIR)/%,$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(LIB_SRC))))

# +-----------------------------------+
# | Rules                             |
# +-----------------------------------+

# Disable default built-in handling for various file types (important!)
.SUFFIXES:

#
# Dependency file creation
# (Note: Pattern substitution is used to add the build output directory for each dependency rule)
#

.PHONY: depend
depend: $(LIB_SRC)
	@echo "\n---------------------------------------------------------------------"
	@echo " Generating dependencies for configuration [$(BUILD_PLATFORM)-$(BUILD_MODE)-$(BUILD_TYPE)]"
	@echo "---------------------------------------------------------------------\n"
	$(MAKE_OBJ_DIR)
	$(CXX) $(CXX_FLAGS) $(EXTRA_INCLUDE_DIRS) -MM $(LIB_SRC) | sed 's|^\(.*\.o\)|$(OBJ_DIR)/\1|g' > $(DEPEND_FILE)

# Include the dependencies file if it exists
-include $(DEPEND_FILE)

#
# Compile rule for library sources
#

#@echo "\n---------------------------------------------------------------------"
#@echo " Compiling configuration [$(BUILD_PLATFORM)-$(BUILD_MODE)-$(BUILD_TYPE)]"
#@echo "---------------------------------------------------------------------\n"

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp
	$(MAKE_OBJ_DIR)
	$(CXX) $(CXX_FLAGS) $(EXTRA_INCLUDE_DIRS) -c $< -o $@

#
# Link rules for the library (static|shared)
#

$(LIB_DIR)/$(LIB_FILE): $(LIB_OBJ)
	@echo "\n---------------------------------------------------------------------"
	@echo " Linking configuration [$(BUILD_PLATFORM)-$(BUILD_MODE)-$(BUILD_TYPE)]"
	@echo "---------------------------------------------------------------------\n"

	$(MAKE_LIB_DIR)
ifeq ($(BUILD_TYPE),static)
	ar rcs $@ $^
else
	$(CXX_LD) $(CXX_LD_FLAGS) $(EXTRA_LIB_DIRS) $^ $(EXTRA_LIBS) -o $@
endif

	@echo "\nLibrary successfully linked into $(LIB_FILE)\n"


# Alias-rule for the library
.PHONY: lib
lib: $(LIB_DIR)/$(LIB_FILE)

.PHONY: clean
clean:
	@echo "\n---------------------------------------------------------------------"
	@echo " Cleaning up configuration [$(BUILD_PLATFORM)-$(BUILD_MODE)-$(BUILD_TYPE)]"
	@echo "---------------------------------------------------------------------\n"
# TODO: $(MAKE) -C Tests clean
	rm -rf $(LIB_DIR)
	rm -rf $(OBJ_DIR)
	
.PHONY: info
info:
	@echo "\n---------------------------------------------------------------------"
	@echo " Information for configuration [$(BUILD_PLATFORM)-$(BUILD_MODE)-$(BUILD_TYPE)]"
	@echo "---------------------------------------------------------------------\n"
	@echo "\n--= Directories and files =--\n"
	@echo "Project name       : $(PROJECT_NAME)\n"
	@echo "Build platform     : $(BUILD_PLATFORM)"
	@echo "Build mode         : $(BUILD_MODE)"
	@echo "Build type         : $(BUILD_TYPE)\n"
	@echo "Sources directory  : $(SRC_DIR)"
	@echo "Object directory   : $(OBJ_DIR)"
	@echo "Include directory  : $(INCLUDE_DIR)"
	@echo "Library directory  : $(LIB_DIR)"
	@echo "3rdParty directory : $(INCLUDE_DIR)"
	@echo "Binary directory   : $(BIN_DIR)"
	@echo "Documentation dir  : $(DOC_DIR)\n"
	@echo "Depend file        : $(DEPEND_FILE)"
	@echo "Library name       : $(LIB_NAME)"
	@echo "Library file       : $(LIB_FILE)"
	@echo "Library objects    : $(LIB_OBJ)"
	@echo "--= Compiler and linker settings =--\n"
	@echo "Compiler           : $(CXX)"
	@echo "Compiler flags     : $(CXX_FLAGS)"
	@echo "Linker command     : $(CXX_LD)"
	@echo "Linker flags       : $(CXX_LD_FLAGS)\n"
	@echo "\n\n"


.DEFAULT_GOAL := lib
