#
#  OpenDAFF Common Makefile 
#
#  Authoren: Frank Wefers  (Frank.Wefers@akustik.rwth-aachen.de)
#            Jonas Stienen (Jonas.Stienen@akustik.rwth-aachen.de)
#
#  Date/Version: $Id: Makefile.common,v 1.2 2010/02/08 18:55:48 fwefers Exp $
#
#  (c) Copyright Institute of Technical Acoustics (ITA), RWTH Aachen University 2009-2010
#

#
#  This makefile is used to define variables common to all build platforms, modes and types.
#


#
#  First ensure that the build platform, build mode and build type are selected properly
#
#  Note: BUILD_MODE and BUILD_TYPE are usually automatically defined by the master makefile
#

ifeq "$(origin BUILD_PLATFORM)" "undefined"
$(error Build platform not specified. For more information read 'BUILDING.txt'.)
endif

ifeq "$(origin BUILD_MODE)" "undefined"
$(error Build mode not specified. For more information read 'BUILDING.txt'.)
endif

ifeq "$(origin BUILD_TYPE)" "undefined"
$(error Build type not specified. For more information read 'BUILDING.txt'.)
endif

VALID := NONE
ifeq ($(BUILD_MODE),release)
	VALID := TRUE
endif
ifeq ($(BUILD_MODE),debug)

	VALID := TRUE
endif
ifeq ($(VALID),NONE)
$(error Invalid build mode. For more information read 'BUILDING.txt'.)
endif

VALID := NONE
ifeq ($(BUILD_TYPE),static)
	VALID := TRUE
endif
ifeq ($(BUILD_TYPE),shared)
	VALID := TRUE
endif
ifeq ($(VALID),NONE)
$(error Invalid build type. For more information read 'BUILDING.txt'.)
endif


#
#  Define project directories and files
#

# Name of the project
PROJECT_NAME := DAFF

# Sources of the library
SRC_DIR      := src

# Header files exported by the library
INCLUDE_DIR  := include

# Destination directory for assembled library files
LIB_DIR      := lib/$(BUILD_PLATFORM)

# Destination directory for binaries (tests and utilities)
BIN_DIR 	 := build/$(BUILD_PLATFORM)

# Directory to store the documentation
DOC_DIR      := doc

# Directory to store intermediate files of the build process
OBJ_DIR 	 := temp/$(BUILD_PLATFORM)/$(BUILD_MODE)/$(BUILD_TYPE)

# Dependency file
DEPEND_FILE  := $(OBJ_DIR)/Makefile.depend


#
#  Platform-independent compiler and linker settings
#

EXTRA_INCLUDE_DIRS += -I$(INCLUDE_DIR) -I$(SRC_DIR)
EXTRA_LIB_DIRS +=
EXTRA_LIBS +=


#
#  Build-configuration dependent compiler and linker settings
#

ifeq ($(BUILD_MODE),release)
	#
	#  Common settings for the release mode
	#
	CXX_FLAGS +=
	CXX_LD_FLAGS +=
	
	EXTRA_INCLUDE_DIRS +=
	EXTRA_LIB_DIRS +=
	EXTRA_LIBS +=
else
	#
	#  Common settings for the debug mode
	#
	CXX_FLAGS += -g -DDEBUG
	CXX_LD_FLAGS +=

	EXTRA_INCLUDE_DIRS +=
	EXTRA_LIB_DIRS +=
	EXTRA_LIBS +=
endif


ifeq ($(BUILD_TYPE),static)
	#
	#  Common settings for the static library
	#
	CXX_FLAGS+=
	CXX_LD_FLAGS +=

	EXTRA_INCLUDE_DIRS +=
	EXTRA_LIB_DIRS +=
	EXTRA_LIBS +=
else
	#
	#  Common settings for the shared library
	#
	CXX_FLAGS+=
	CXX_LD_FLAGS +=

	EXTRA_INCLUDE_DIRS += 
	EXTRA_LIB_DIRS += 
	EXTRA_LIBS += 
endif


#
#  Determine the library's name and filename depending on the selected configuration
#
#  LIB_NAME = Name of the library file without 'lib' prefix and '.(a|so)' suffix.
#  LIB_FILE = Filename of the library (e.g. libITAToolkitDSO.so) without destination path
#

LIB_NAME = $(PROJECT_NAME)$(LIBFILE_TAG)
LIB_FILE = lib$(LIB_NAME)$(LIBFILE_SUFFIX)
